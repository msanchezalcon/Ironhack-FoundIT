{"ast":null,"code":"var _jsxFileName = \"/Users/msanchezalcon/Desktop/ironhack/week8/Ironhack-FoundIT/client/src/components/items/Item-list/itemlist.js\";\nimport React, { Component } from 'react';\nimport AppService from '../../../service/AppService';\nimport ItemCard from './Item-card';\nimport ItemForm from './../Item-form';\nimport Spinner from '../../ui/Spinner'; // import ProfilePage from '../../pages/profile'\n\nimport './Item-list.css';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport add from './add.png';\n\nclass ItemList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = () => this.updateItemList();\n\n    this.updateItemList = () => {\n      this.appService.getAllItems().then(response => {\n        console.log('all items', response.data);\n        this.setState({\n          items: response.data\n        });\n      }).catch(err => console.log(err));\n    };\n\n    this.handleModal = status => this.setState({\n      showModal: status\n    });\n\n    this.handleItemSubmit = () => {\n      this.handleModal(false);\n      this.updateItemList();\n    };\n\n    this.state = {\n      items: undefined,\n      showModal: false // updateModal: false\n\n    };\n    this.appService = new AppService();\n  }\n\n  // handleUpdateSubmit = () => {\n  //     this.handleUpdateModal(false)\n  //     this.updateItemList()\n  // }\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }\n    }, \"HOLA\"));\n  }\n\n}\n\nexport default ItemList;","map":{"version":3,"sources":["/Users/msanchezalcon/Desktop/ironhack/week8/Ironhack-FoundIT/client/src/components/items/Item-list/itemlist.js"],"names":["React","Component","AppService","ItemCard","ItemForm","Spinner","Container","Row","Button","Modal","add","ItemList","constructor","props","componentDidMount","updateItemList","appService","getAllItems","then","response","console","log","data","setState","items","catch","err","handleModal","status","showModal","handleItemSubmit","state","undefined","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,UAAP,MAAuB,6BAAvB;AAEA,OAAOC,QAAP,MAAqB,aAArB;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,OAAOC,OAAP,MAAoB,kBAApB,C,CACA;;AAGA,OAAO,iBAAP;AAEA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,OAAOC,GAAP,MAAgB,WAAhB;;AAIA,MAAMC,QAAN,SAAuBV,SAAvB,CAAiC;AAE7BW,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAWnBC,iBAXmB,GAWC,MAAM,KAAKC,cAAL,EAXP;;AAAA,SAanBA,cAbmB,GAaF,MAAM;AACnB,WAAKC,UAAL,CACKC,WADL,GAEKC,IAFL,CAEUC,QAAQ,IAAI;AACdC,QAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBF,QAAQ,CAACG,IAAlC;AACA,aAAKC,QAAL,CAAc;AAAEC,UAAAA,KAAK,EAAEL,QAAQ,CAACG;AAAlB,SAAd;AACH,OALL,EAMKG,KANL,CAMWC,GAAG,IAAIN,OAAO,CAACC,GAAR,CAAYK,GAAZ,CANlB;AAOH,KArBkB;;AAAA,SAuBnBC,WAvBmB,GAuBLC,MAAM,IAAI,KAAKL,QAAL,CAAc;AAAEM,MAAAA,SAAS,EAAED;AAAb,KAAd,CAvBL;;AAAA,SA4BnBE,gBA5BmB,GA4BA,MAAM;AACrB,WAAKH,WAAL,CAAiB,KAAjB;AACA,WAAKZ,cAAL;AACH,KA/BkB;;AAEf,SAAKgB,KAAL,GAAa;AACTP,MAAAA,KAAK,EAAEQ,SADE;AAETH,MAAAA,SAAS,EAAE,KAFF,CAGT;;AAHS,KAAb;AAMA,SAAKb,UAAL,GAAkB,IAAId,UAAJ,EAAlB;AACH;;AAwBD;AACA;AACA;AACA;AAEA+B,EAAAA,MAAM,GAAG;AAEL,wBACI,uDACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,CADJ;AAsBH;;AAhE4B;;AAmEjC,eAAetB,QAAf","sourcesContent":["import React, { Component } from 'react'\nimport AppService from '../../../service/AppService'\n\nimport ItemCard from './Item-card'\nimport ItemForm from './../Item-form'\nimport Spinner from '../../ui/Spinner'\n// import ProfilePage from '../../pages/profile'\n\n\nimport './Item-list.css'\n\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Button from 'react-bootstrap/Button'\nimport Modal from 'react-bootstrap/Modal'\nimport add from './add.png'\n\n\n\nclass ItemList extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            items: undefined,\n            showModal: false,\n            // updateModal: false\n\n        }\n        this.appService = new AppService()\n    }\n\n    componentDidMount = () => this.updateItemList()\n\n    updateItemList = () => {\n        this.appService\n            .getAllItems()\n            .then(response => {\n                console.log('all items', response.data)\n                this.setState({ items: response.data })\n            })\n            .catch(err => console.log(err))\n    }\n\n    handleModal = status => this.setState({ showModal: status })\n\n    // handleUpdateModal = status => this.setState({ updateModal: status })\n\n\n    handleItemSubmit = () => {\n        this.handleModal(false)\n        this.updateItemList()\n    }\n\n    // handleUpdateSubmit = () => {\n    //     this.handleUpdateModal(false)\n    //     this.updateItemList()\n    // }\n\n    render() {\n\n        return (\n            <>\n                <h1>HOLA</h1>\n                {/* <Container as=\"main\" className=\"items-page\">\n                    {\n                        this.props.loggedInUser && <Button variant=\"link\" onClick={() => this.handleModal(true)}><img className=\"addBtn\" src={add} alt=\"add\" /></Button>\n                    }\n                    {\n                        !this.state.items ? <Spinner /> :\n                            <Row>\n                                {this.state.items.map(elm => <ItemCard key={elm._id} {...elm} />)}\n                            </Row>\n                    }\n                </Container>\n\n                <Modal size=\"lg\" show={this.state.showModal} onHide={() => this.handleModal(false)}>\n                    <Modal.Body>\n                        <ItemForm {...this.props} handleItemSubmit={this.handleItemSubmit} />\n                    </Modal.Body>\n                </Modal> */}\n            </>\n        )\n    }\n}\n\nexport default ItemList\n"]},"metadata":{},"sourceType":"module"}