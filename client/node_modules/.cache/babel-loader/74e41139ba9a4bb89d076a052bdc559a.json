{"ast":null,"code":"// import React, { Component } from 'react'\n// import AppService from '../../../../service/AppService'\n// import UserService from '../../../../service/UserService'\n// import './items-user.css'\n// import Button from 'react-bootstrap/Button'\n// import Row from 'react-bootstrap/Row'\n// import Modal from 'react-bootstrap/Modal'\n// import ItemCardProfile from './Item-card-profile'\n// import Spinner from '../../../ui/Spinner'\n// import ItemForm from './../../items/Item-form'\n// class ItemsUser extends Component {\n//     constructor(props) {\n//         super(props)\n//         this.state = {\n//             items: [],\n//             updateModal: false,\n//             id: this.props.loggedInUser._id\n//         }\n//         this.appService = new AppService()\n//         this.userService = new UserService()\n//     }\n//     componentDidMount = () => {\n//         if (this.props.loggedInUser) {\n//             this.updateItemList()\n//         }\n//     }\n//     componentDidUpdate = (prevProps) => {\n//         if (!prevProps.loggedInUser && this.props.loggedInUser) {\n//             this.updateItemList()\n//         }\n//     }\n//     updateItemList = () => {\n//         this.userService\n//             .getUserItems(this.state.id)\n//             .then(response => {\n//                 console.log('all items from this user', response.data)\n//                 this.setState({ items: response.data })\n//             })\n//             .catch(err => console.log(err))\n//     }\n//     deleteItem = (id) => {\n//         this.appService.deleteItem(id)\n//             .then(response => {\n//                 const updateItem = this.state.items.filter(item => item._id !== id)\n//                 this.setState({ items: updateItem })\n//             })\n//             .catch(err => console.log(err))\n//     }\n//     // editItem = (id,{} ) => { // no funciona aun\n//     //     this.appService.editItem(id,{loquesea} )\n//     //         .then(() => this.updateItemList())\n//     //         .catch(err => console.log(err))\n//     // }\n//     //handle edit modal for item\n//     handleModal = () => this.setState({ updateModal: true })\n//     onHide = () => this.setState({ updateModal: false })\n//     handleItemSubmit = () => {\n//         this.handleModal(false)\n//         this.updateItemList()\n//     }\n//     render() {\n//         console.log('items user page props', this.props)\n//         console.log('estado de items user', this.state.items)\n//         console.log('props de usuario en items user', this.props.loggedInUser)\n//         const name = this.state.items.name ? this.state.items.name : \"\"\n//         const description = this.state.items.description ? this.state.items.description : \"\"\n//         const imageUrl = this.state.items.imageUrl ? this.state.items.imageUrl : \"\"\n//         return (\n//             <>\n//                 {\n//                     !this.state.items ? <Spinner /> :\n//                         <Row>\n//                             {this.state.items.map(elm => <ItemCardProfile editItem={this.editItem} deleteItem={this.deleteItem} key={elm._id} {...elm} />\n//                             )}\n//                         </Row>\n//                 }\n//                 {/* <Modal size=\"lg\" show={this.state.updateModal} onHide={this.onHide} >\n//                     <Modal.Body>\n//                         <Row>\n//                             {this.state.updateModal ? <ItemForm id={id} name={name} description={description} imageUrl={imageUrl} closeModal={this.onHide} /> : null}\n//                         </Row>\n//                     </Modal.Body>\n//                 </Modal> */}\n//             </>\n//         )\n//     }\n// }\n// export default ItemsUser","map":{"version":3,"sources":["/Users/msanchezalcon/Desktop/ironhack/week8/Ironhack-FoundIT/client/src/components/pages/profile/Items-user/index.js"],"names":[],"mappings":"AAAA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAKA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["// import React, { Component } from 'react'\n\n// import AppService from '../../../../service/AppService'\n// import UserService from '../../../../service/UserService'\n\n// import './items-user.css'\n// import Button from 'react-bootstrap/Button'\n// import Row from 'react-bootstrap/Row'\n// import Modal from 'react-bootstrap/Modal'\n// import ItemCardProfile from './Item-card-profile'\n// import Spinner from '../../../ui/Spinner'\n// import ItemForm from './../../items/Item-form'\n\n\n// class ItemsUser extends Component {\n//     constructor(props) {\n//         super(props)\n//         this.state = {\n//             items: [],\n//             updateModal: false,\n//             id: this.props.loggedInUser._id\n\n\n//         }\n//         this.appService = new AppService()\n//         this.userService = new UserService()\n\n//     }\n\n//     componentDidMount = () => {\n//         if (this.props.loggedInUser) {\n//             this.updateItemList()\n//         }\n//     }\n//     componentDidUpdate = (prevProps) => {\n//         if (!prevProps.loggedInUser && this.props.loggedInUser) {\n//             this.updateItemList()\n//         }\n//     }\n\n//     updateItemList = () => {\n//         this.userService\n//             .getUserItems(this.state.id)\n//             .then(response => {\n//                 console.log('all items from this user', response.data)\n//                 this.setState({ items: response.data })\n//             })\n//             .catch(err => console.log(err))\n//     }\n\n//     deleteItem = (id) => {\n//         this.appService.deleteItem(id)\n//             .then(response => {\n//                 const updateItem = this.state.items.filter(item => item._id !== id)\n//                 this.setState({ items: updateItem })\n//             })\n//             .catch(err => console.log(err))\n//     }\n\n//     // editItem = (id,{} ) => { // no funciona aun\n//     //     this.appService.editItem(id,{loquesea} )\n//     //         .then(() => this.updateItemList())\n//     //         .catch(err => console.log(err))\n//     // }\n\n//     //handle edit modal for item\n//     handleModal = () => this.setState({ updateModal: true })\n//     onHide = () => this.setState({ updateModal: false })\n\n//     handleItemSubmit = () => {\n//         this.handleModal(false)\n//         this.updateItemList()\n//     }\n\n\n//     render() {\n//         console.log('items user page props', this.props)\n//         console.log('estado de items user', this.state.items)\n//         console.log('props de usuario en items user', this.props.loggedInUser)\n\n\n\n\n//         const name = this.state.items.name ? this.state.items.name : \"\"\n//         const description = this.state.items.description ? this.state.items.description : \"\"\n//         const imageUrl = this.state.items.imageUrl ? this.state.items.imageUrl : \"\"\n\n//         return (\n//             <>\n//                 {\n//                     !this.state.items ? <Spinner /> :\n//                         <Row>\n//                             {this.state.items.map(elm => <ItemCardProfile editItem={this.editItem} deleteItem={this.deleteItem} key={elm._id} {...elm} />\n//                             )}\n//                         </Row>\n//                 }\n\n\n//                 {/* <Modal size=\"lg\" show={this.state.updateModal} onHide={this.onHide} >\n//                     <Modal.Body>\n//                         <Row>\n//                             {this.state.updateModal ? <ItemForm id={id} name={name} description={description} imageUrl={imageUrl} closeModal={this.onHide} /> : null}\n//                         </Row>\n//                     </Modal.Body>\n//                 </Modal> */}\n//             </>\n//         )\n//     }\n// }\n\n// export default ItemsUser"]},"metadata":{},"sourceType":"module"}