{"ast":null,"code":"var _jsxFileName = \"/Users/msanchezalcon/Desktop/ironhack/week8/Ironhack-FoundIT/client/src/components/pages/items/Item-form/second-form.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Form extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      const {\n        editMode,\n        post\n      } = this.props;\n      const title = this.titleRef.value;\n      const body = this.bodyRef.value;\n\n      if (editMode) {\n        const data = {\n          title,\n          body\n        };\n        this.props.dispatch({\n          type: 'UPDATE',\n          id: post.id,\n          data\n        });\n      } else {\n        const data = {\n          id: new Date(),\n          name: \"\",\n          description: \"\",\n          category: \"\",\n          editing: false\n        };\n        this.props.dispatch({\n          type: 'ADD_POST',\n          data\n        });\n      }\n    };\n  }\n\n  render() {\n    const {\n      editMode,\n      post\n    } = this.props;\n    const pageTitle = editMode ? 'Edit Post' : 'Create Post';\n    const buttonTitle = editMode ? 'Update' : 'Post';\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }\n    }, pageTitle), /*#__PURE__*/React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      required: true,\n      type: \"text\",\n      ref: input => this.titleRef = input,\n      placeholder: \"Name\",\n      defaultValue: post.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"textarea\", {\n      required: true,\n      rows: \"5\",\n      ref: input => this.bodyRef = input,\n      cols: \"28\",\n      placeholder: \"Enter Post\",\n      defaultValue: post.body,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Form.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      style: {\n        color: 'SlateBlue'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 25\n      }\n    }, \"Name\"), /*#__PURE__*/React.createElement(Form.Control, {\n      onChange: this.handleInputChange,\n      defaultValue: post.body,\n      ref: input => this.bodyRef = input,\n      name: \"name\",\n      type: \"text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Form.Text, {\n      className: \"text-muted\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 25\n      }\n    }, \"The devil is in the details ;)\")), /*#__PURE__*/React.createElement(\"button\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }\n    }, buttonTitle)));\n  }\n\n}\n\nForm.propTypes = {\n  editMode: PropTypes.bool,\n  post: PropTypes.object\n};\nForm.defaultProps = {\n  editMode: false,\n  // false: Create mode, true: Edit mode\n  post: {\n    name: \"\",\n    description: \"\",\n    category: \"\"\n  } // Pass defined Post object in create mode in order not to get undefined objects in 'defaultValue's of inputs.\n\n};\nexport default Form;","map":{"version":3,"sources":["/Users/msanchezalcon/Desktop/ironhack/week8/Ironhack-FoundIT/client/src/components/pages/items/Item-form/second-form.js"],"names":["React","Component","PropTypes","Form","handleSubmit","e","preventDefault","editMode","post","props","title","titleRef","value","body","bodyRef","data","dispatch","type","id","Date","name","description","category","editing","render","pageTitle","buttonTitle","input","color","handleInputChange","propTypes","bool","object","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n\nclass Form extends Component {\n    handleSubmit = e => {\n        e.preventDefault()\n        const { editMode, post } = this.props\n        const title = this.titleRef.value\n        const body = this.bodyRef.value\n        if (editMode) {\n            const data = {\n                title,\n                body\n            }\n            this.props.dispatch({ type: 'UPDATE', id: post.id, data })\n        }\n        else {\n            const data = {\n                id: new Date(),\n                name: \"\",\n                description: \"\",\n                category: \"\",\n                editing: false\n            }\n            this.props.dispatch({ type: 'ADD_POST', data })\n        }\n    }\n\n    render() {\n        const { editMode, post } = this.props\n        const pageTitle = editMode ? 'Edit Post' : 'Create Post'\n        const buttonTitle = editMode ? 'Update' : 'Post'\n        return (\n            <div>\n                <h1>{pageTitle}</h1>\n                <Form onSubmit={this.handleSubmit}>\n                    \n                    <input\n                        required\n                        type=\"text\"\n                        ref={input => this.titleRef = input}\n                        placeholder=\"Name\"\n                        defaultValue={post.name}\n                    />\n                    <textarea\n                        required\n                        rows=\"5\"\n                        ref={input => this.bodyRef = input}\n                        cols=\"28\"\n                        placeholder=\"Enter Post\"\n                        defaultValue={post.body}\n                    />\n\n                    <Form.Group>\n                        <Form.Label style={{ color: 'SlateBlue' }}>Name</Form.Label>\n                        <Form.Control onChange={this.handleInputChange} defaultValue={post.body} ref={input => this.bodyRef = input} name=\"name\" type=\"text\" />\n                        <Form.Text className=\"text-muted\">The devil is in the details ;)</Form.Text>\n                    </Form.Group>\n                  \n                    \n                    <button>{buttonTitle}</button>\n                </Form>\n            </div>\n        );\n    }\n}\n\nForm.propTypes = {\n    editMode: PropTypes.bool,\n    post: PropTypes.object\n}\n\nForm.defaultProps = {\n    editMode: false,    // false: Create mode, true: Edit mode\n    post: {\n        name: \"\",\n        description: \"\",\n        category: \"\"\n    }    // Pass defined Post object in create mode in order not to get undefined objects in 'defaultValue's of inputs.\n}\n\nexport default Form"]},"metadata":{},"sourceType":"module"}