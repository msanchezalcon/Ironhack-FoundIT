{"ast":null,"code":"// import React, { Component } from 'react'\n// import 'bootstrap/dist/css/bootstrap.min.css'\n// import './App.css'\n// import AuthService from './../service/AuthService'\n// import { Switch, Route, Redirect } from 'react-router-dom'\n// import Navigation from './ui/Navbar'\n// import Message from './ui/CustomToast'\n// import CoastersList from './coasters/Coaster-list/'\n// import CoasterDetail from './coasters/Coaster-detail/'\n// import SignupForm from './auth/Signup-form'\n// import LoginForm from './auth/Login-form'\n// import ProfilePage from './pages/profile'\n// import IndexPage from './pages/index'\n// class App extends Component {\n//   constructor() {\n//     super()\n//     this.state = {\n//       loggedInUser: null,\n//       toast: {\n//         visible: false,\n//         text: ''\n//       }\n//     }\n//     this.AuthService = new AuthService()\n//   }\n//   setTheUser = user => this.setState({ loggedInUser: user }, () => console.log(\"El estado de App ha cambiado:\", this.state))\n//   fetchUser = () => {\n//     this.AuthService\n//       .isLoggedIn()\n//       .then(response => this.state.loggedInUser === null && this.setState({ loggedInUser: response.data }))\n//       .catch(err => console.log({ err }))\n//   }\n//   handleToast = (visible, text = '') => {\n//     let toastCopy = { ...this.state.toast }\n//     toastCopy = { visible, text }\n//     this.setState({ toast: toastCopy })\n//   }\n//   render() {\n//     this.fetchUser()\n//     return (\n//       <>\n//         <Navigation setTheUser={this.setTheUser} loggedInUser={this.state.loggedInUser} handleToast={this.handleToast} />\n//         <Switch>\n//           <Route exact path=\"/\" render={() => <IndexPage />} />\n//           <Route path=\"/profile\" render={() =>\n//             this.state.loggedInUser ? <ProfilePage loggedInUser={this.state.loggedInUser} /> : <Redirect to='/signup' />}\n//           />\n//           <Route exact path=\"/coasters\" render={() => <CoastersList loggedInUser={this.state.loggedInUser} />} />\n//           <Route path=\"/coasters/:coaster_id\" render={props => <CoasterDetail {...props} />} />\n//           <Route path=\"/signup\" render={props => <SignupForm {...props} setTheUser={this.setTheUser} handleToast={this.handleToast} />} />\n//           <Route path=\"/login\" render={props => <LoginForm {...props} setTheUser={this.setTheUser} handleToast={this.handleToast} />} />\n//         </Switch>\n//         <Message {...this.state.toast} handleToast={this.handleToast} />\n//       </>\n//     )\n//   }\n// }\n// export default App;","map":{"version":3,"sources":["/Users/msanchezalcon/Desktop/ironhack/week8/Ironhack-FoundIT/client/src/components/App.js"],"names":[],"mappings":"AAAA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AAEA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AAEA","sourcesContent":["// import React, { Component } from 'react'\n// import 'bootstrap/dist/css/bootstrap.min.css'\n// import './App.css'\n\n// import AuthService from './../service/AuthService'\n\n// import { Switch, Route, Redirect } from 'react-router-dom'\n\n// import Navigation from './ui/Navbar'\n// import Message from './ui/CustomToast'\n\n// import CoastersList from './coasters/Coaster-list/'\n// import CoasterDetail from './coasters/Coaster-detail/'\n// import SignupForm from './auth/Signup-form'\n// import LoginForm from './auth/Login-form'\n// import ProfilePage from './pages/profile'\n// import IndexPage from './pages/index'\n\n\n// class App extends Component {\n\n//   constructor() {\n//     super()\n//     this.state = {\n//       loggedInUser: null,\n//       toast: {\n//         visible: false,\n//         text: ''\n//       }\n//     }\n//     this.AuthService = new AuthService()\n//   }\n\n//   setTheUser = user => this.setState({ loggedInUser: user }, () => console.log(\"El estado de App ha cambiado:\", this.state))\n\n//   fetchUser = () => {\n//     this.AuthService\n//       .isLoggedIn()\n//       .then(response => this.state.loggedInUser === null && this.setState({ loggedInUser: response.data }))\n//       .catch(err => console.log({ err }))\n//   }\n\n//   handleToast = (visible, text = '') => {\n//     let toastCopy = { ...this.state.toast }\n//     toastCopy = { visible, text }\n//     this.setState({ toast: toastCopy })\n//   }\n\n//   render() {\n\n//     this.fetchUser()\n\n//     return (\n\n//       <>\n\n//         <Navigation setTheUser={this.setTheUser} loggedInUser={this.state.loggedInUser} handleToast={this.handleToast} />\n\n//         <Switch>\n//           <Route exact path=\"/\" render={() => <IndexPage />} />\n\n//           <Route path=\"/profile\" render={() =>\n//             this.state.loggedInUser ? <ProfilePage loggedInUser={this.state.loggedInUser} /> : <Redirect to='/signup' />}\n//           />\n\n//           <Route exact path=\"/coasters\" render={() => <CoastersList loggedInUser={this.state.loggedInUser} />} />\n//           <Route path=\"/coasters/:coaster_id\" render={props => <CoasterDetail {...props} />} />\n//           <Route path=\"/signup\" render={props => <SignupForm {...props} setTheUser={this.setTheUser} handleToast={this.handleToast} />} />\n//           <Route path=\"/login\" render={props => <LoginForm {...props} setTheUser={this.setTheUser} handleToast={this.handleToast} />} />\n//         </Switch>\n\n//         <Message {...this.state.toast} handleToast={this.handleToast} />\n\n//       </>\n\n//     )\n//   }\n// }\n\n// export default App;\n"]},"metadata":{},"sourceType":"module"}